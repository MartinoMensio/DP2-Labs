<?xml version="1.0" encoding="UTF-8"?>

<project name="NFFG-3" default="package-service" basedir=".">
	<description>
			Script for NFFG Assignment 3
	</description>

	<!-- The location of this assignment -->
	<property name="lab3.location" location="." />

	<!-- The random "NffgVerifierFactory" used for NFFGInfo, and for the tests -->
	<property name="NFFGInfo.NffgVerifierFactory" value="it.polito.dp2.NFFG.Random.NffgVerifierFactoryImpl" />
	<property name="NFFGClientFactory" value="it.polito.dp2.NFFG.sol3.client1.NFFGClientFactory" />

	<!-- The location to be used for class files -->
	<property name="build.dir" location="${lab3.location}/build" />
	<!-- The location for source files -->
	<property name="src.dir" location="${lab3.location}/src" />
	<!-- The location for solutions -->
	<property name="sol3.dir" value="src/it/polito/dp2/NFFG/sol3" />
	<!-- The location for jar files -->
	<property name="lib.dir" location="${lab3.location}/lib" />
	<!-- The location for custom files -->
	<property name="custom.dir" location="${lab3.location}/custom" />
	
	<!-- The default test case -->
	<property name="testcase" value="0" />
	<!-- The default test class -->
	<property name="test.class" value="it.polito.dp2.NFFG.lab3.tests.NFFGTests" />
	<property name="lab1.test.class" value="it.polito.dp2.NFFG.lab3.tests.NFFGTests_lab1" />
	<!-- The default URL to be used by clients -->
	<property name="URL" value="http://localhost:8080/NffgService/rest" />
	<!--property name="NEO4JURL" value="http://localhost:${tomcatPort}/Neo4JXML/rest" /-->

	<!-- The ant file to be provided for client and service compilation -->
	<property name="sol.build.file" value="sol_build.xml" />
	<property name="sol.build.filepath" location="${lab3.location}/${sol.build.file}" />
	
	<property name="gen-tomcat-service.dir" location="${lab3.location}/target"/>
	<property name="resources.dir" location="${lab3.location}/WebContent"/>
	<property name="gen-war.dir" location="${lab3.location}/war" />


	<!-- The name to be given to the final zip -->
	<property name="sol.zip" value="lab3.zip" />
	
	<!-- Java compiler settings -->
	<property name="debug" value="true" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.8" />
	<property name="source" value="1.8" />
	
	<import file="tomcat-build.xml"/>


	<!-- The classpath that includes only the NFFG.jar -->
	<path id="NFFG.classpath">
		<pathelement location="${lib.dir}/NFFG.jar"/>
	</path>
	
	<!-- The classpath to be used for running the tests -->
	<path id="test.classpath">
		<pathelement location="${lab3.location}/lib/NFFG.jar" />
		<pathelement location="${lab3.location}/lib/lab3.jar" />
		<pathelement location="${lab3.location}/lib/NFFGRandom.jar" />
		<pathelement location="${lab3.location}/lib/junit-4.5.jar" />
		<pathelement path="${build.dir}" />
		<fileset dir="${lab3.location}/lib">
		    <include name="*.jar" />
		</fileset>
	</path>

	<target name="setseed" unless="seed">
		<tstamp>
			<format property="seed" pattern="1HHmmss" />
		</tstamp>
	</target>

	<target name="init">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${gen-tomcat-service.dir}"/>		
	</target>

	<!-- The target for compiling the NFFGInfo application -->
	<target name="buildNFFGInfo" depends="init">
		<echo>Building NFFGInfo (if needed)...</echo>
		<javac 
			destdir="${build.dir}"
			debug="${debug}"
			debuglevel="${debuglevel}"
			source="${source}"
			target="${target}"
			includeantruntime="false">
				<src path="${src.dir}" />
				<include name="it/polito/dp2/NFFG/lab1/NFFGInfo.java" />
				<classpath>
					<path refid="NFFG.classpath" />
				</classpath>
		</javac>
		<echo>Done.</echo>
	</target>

	<!-- The target for running the NFFGInfo application -->
	<target name="NFFGInfo" depends="buildNFFGInfo, setseed" description="Run NFFGInfo">
		<java classname="it.polito.dp2.NFFG.lab1.NFFGInfo" failonerror="true" fork="yes">
			<sysproperty key="it.polito.dp2.NFFG.Random.seed" value="${seed}"/>
			<sysproperty key="it.polito.dp2.NFFG.Random.testcase" value="${testcase}"/>
			<sysproperty key="it.polito.dp2.NFFG.NffgVerifierFactory" value="${NFFGInfo.NffgVerifierFactory}"/>
			<classpath>
				<path refid="NFFG.classpath" />
				<pathelement location="${lib.dir}/NFFGRandom.jar"/>
				<pathelement path="${build.dir}"/>
			</classpath>
		</java>
	</target>

	<target name="build-service" depends="init">
		<ant antfile="${sol.build.filepath}" target="build-service">
			<property name="basedir" value="${lab3.location}" />
		</ant>
	</target>

	<target name="build-client" depends="init">
		<ant antfile="${sol.build.filepath}" target="build-client">
			<property name="basedir" value="${lab3.location}" />
		</ant>
	</target>
	
	<target name="package-service" depends="build-service">
		<!-- copy web module resource files to temporary destination folder -->
    	<copy toDir="${gen-tomcat-service.dir}" overwrite="true">
        	<fileset dir="${resources.dir}">
			</fileset>
      	</copy>
		<!-- copy class files to WEB-INF/classes directory -->
    	<copy toDir="${gen-tomcat-service.dir}/WEB-INF/classes" overwrite="true">
        	<fileset dir="${build.dir}"/>
      	</copy>
		<!-- copy lib files to WEB-INF/lib directory -->
    	<copy toDir="${gen-tomcat-service.dir}/WEB-INF/lib" overwrite="true">
        	<fileset dir="${lib.dir}">
        		<include name="*.jar"/>
        		<exclude name="NFFGRandom.jar"/>
        		<exclude name="lab3.jar"/>
			</fileset>
      	</copy> 
		<!-- make war archive -->
		<jar destfile="${gen-war.dir}/${serviceName}.war" basedir="${gen-tomcat-service.dir}"/>
	</target>
	
	<target name="redeployNeo4JXML" description="re-Deploy the Neo4JXML service to tomcat">
		<echo>Uneploying Neo4JXML to tomcat...</echo>
		<undeploy url="${tomcatUrl}" username="${tomcatUsername}"
				  password="${tomcatPassword}" path="/Neo4JXML" failonerror="false"/>
		<echo>Deploying Neo4JXML to tomcat...</echo>
		<deploy url="${tomcatUrl}" username="${tomcatUsername}"
				password="${tomcatPassword}" path="/Neo4JXML"
				war="file:${lab3.location}/war/Neo4JXML.war" />
	</target>

	<target name="run-tests" depends="setseed, redeployWS, redeployNeo4JXML">
		<echo>Running functional tests</echo>
		<echo>Seed: ${seed}</echo>

  		<sleep seconds="10"/>
		<antcall target="runFuncTest.real">
			<param name="exit.code1" value="126" />
			<param name="exit.code2" value="125" />
			<param name="test.case" value="0" />
		</antcall>
	</target>

	<!-- Target runFuncTest.real	-->
	<target name="runFuncTest.real" depends="build-client">
		
		<echo>Running NFFGLoader...</echo>
		<java classname="it.polito.dp2.NFFG.lab3.NFFGLoader" failonerror="true" fork="yes">
			<sysproperty key="it.polito.dp2.NFFG.NFFGClientFactory" value="${NFFGClientFactory}" />
			<sysproperty key="it.polito.dp2.NFFG.NffgVerifierFactory" value="${NFFGInfo.NffgVerifierFactory}" />
			<sysproperty key="it.polito.dp2.NFFG.Random.seed" value="${seed}"/>
			<sysproperty key="it.polito.dp2.NFFG.Random.testcase" value="${test.case}"/>
			<sysproperty key="it.polito.dp2.NFFG.lab3.URL" value="${URL}" />
			<classpath>
				<path refid="NFFG.classpath" />
				<pathelement location="${lib.dir}/NFFGRandom.jar"/>
				<pathelement path="${build.dir}" />
				<path refid="test.classpath" />
			</classpath>
		</java>
		<echo>Done.</echo>
		
		<echo>Running First set of Junit tests...</echo>		
		<junit printsummary="yes" dir="." fork="yes" haltonfailure="no" showoutput="no" filtertrace="true" timeout="120000">
			<jvmarg value="-Djava.awt.headless=true" />
			<sysproperty key="it.polito.dp2.NFFG.NffgVerifierFactory" value="${NFFGInfo.NffgVerifierFactory}" />
			<sysproperty key="it.polito.dp2.NFFG.Random.seed" value="${seed}"/>
			<sysproperty key="it.polito.dp2.NFFG.Random.testcase" value="${test.case}"/>
			<sysproperty key="it.polito.dp2.NFFG.lab3.URL" value="${URL}" />
			<formatter type="brief" usefile="false"/>
			<test haltonfailure="no" failureproperty="test_failed" name="${lab1.test.class}"/>
			<classpath>
				<path refid="test.classpath" />
			</classpath>
		</junit>
		<fail if="test_failed" status="${exit.code1}" message="*** First set of Junit tests: Some Tests FAILED ***"/>
		<echo>*** First set of Junit tests: All Tests PASSED  ***</echo>
		
		<echo>Running Second set of Junit tests...</echo>		
		<junit printsummary="yes" dir="." fork="yes" haltonfailure="no" showoutput="no" filtertrace="true" timeout="120000">
			<jvmarg value="-Djava.awt.headless=true" />
			<sysproperty key="it.polito.dp2.NFFG.NffgVerifierFactory" value="${NFFGInfo.NffgVerifierFactory}" />
			<sysproperty key="it.polito.dp2.NFFG.Random.seed" value="${seed}"/>
			<sysproperty key="it.polito.dp2.NFFG.Random.testcase" value="${test.case}"/>
			<sysproperty key="it.polito.dp2.NFFG.lab3.URL" value="${URL}" />
			<sysproperty key="it.polito.dp2.NFFG.lab3.NEO4JURL" value="http://localhost:8080/Neo4JXML/rest"/>
			<sysproperty key="it.polito.dp2.NFFG.NFFGClientFactory" value="it.polito.dp2.NFFG.sol3.client1.NFFGClientFactory"/>
			<formatter type="brief" usefile="false"/>
			<test haltonfailure="no" failureproperty="test_failed" name="${test.class}"/>
			<classpath>
				<path refid="test.classpath" />
			</classpath>
		</junit>
		<fail if="test_failed" status="${exit.code2}" message="*** Second set of Junit tests: Some Tests FAILED ***"/>
		<echo>*** Second set of Junit tests: All Tests PASSED  ***</echo>
		
	</target>

	<!-- target for cleaning -->
	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${gen-tomcat-service.dir}"/>
	</target>

	<!--target for building the final zip containing the solution -->
	<target name="make-final-zip">
		<zip destfile="${sol.zip}" 
			basedir="${lab3.location}" 
			includes="${sol.build.file} custom/* xsd/* doc/* WebContent/**/* ${sol3.dir}/service/**/*.java ${sol3.dir}/client1/**/*.java ${sol3.dir}/client2/**/*.java" />
	</target>
</project>
